name: upload

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: upload-secrets-${{ github.ref }}
  cancel-in-progress: false

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      # Cache node_modules keyed by the lockfile (OS + Node + lock hash)
      - name: Cache node_modules
        id: nm-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node20-nm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node20-nm-

      - name: Install dependencies (only when cache missed)
        if: steps.nm-cache.outputs.cache-hit != 'true'
        run: npm ci --omit=optional --no-audit --no-fund

      # Visibility: show repo layout and any secrets directory
      - name: Show repo tree (top level)
        run: ls -la

      - name: Show secrets directory (if present)
        run: |
          if [ -d secrets ]; then
            echo "üìÇ ./secrets contents:"
            ls -la secrets
          else
            echo "‚ÑπÔ∏è No ./secrets directory found"
          fi

      # Run your uploader with an explicit secrets path.
      # Change SECRETS_PATH if you store league-specific files.
      - name: Run upload-secrets
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
          # Make the input file explicit so we NEVER upload a dummy example by accident.
          SECRETS_PATH: secrets/prod.nfl.json
        run: node upload-secrets.js

      # Optional: print the file your script just wrote so the run log is self-describing
      - name: Show activeSecrets.json
        run: |
          if [ -f activeSecrets.json ]; then
            echo "üìù activeSecrets.json:"
            cat activeSecrets.json
          else
            echo "‚ùå activeSecrets.json not found ‚Äî did upload-secrets.js write it?"
            exit 1
          fi

      - name: Commit and push updated activeSecrets.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ github.ref_name }}
          REPO: ${{ github.repository }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add activeSecrets.json
          git commit -m "Update activeSecrets.json [skip ci]" || exit 0
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git" "HEAD:${BRANCH}"

